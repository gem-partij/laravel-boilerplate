version: "3.9"

services:

    #App Service (PHP)
    app:
        build:
            args:
                user: angger
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        image: "${APP_CONTAINER_NAME}"
        container_name: "${APP_CONTAINER_NAME}"
        restart: unless-stopped
        working_dir: /var/www
        environment:
            TZ: "${APP_TZ}"
        expose:
            # - 9000
            - 80
        ports:
            - "${APP_PORT_FORWARD:-8000}:80"
        volumes:
            - ./:/var/www
            - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini:ro
            - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
            - ./docker/log/nginx:/var/log/nginx
            - ./docker/supervisor/supervisord.conf:/etc/supervisord.conf:ro
            - ./docker/log/supervisord:/var/log/supervisord
        networks:
            - default

    #Nginx Service
    # nginx:
    #     image: nginx:stable-alpine
    #     container_name: "${NGINX_CONTAINER_NAME}"
    #     restart: unless-stopped
    #     environment:
    #         TZ: "${APP_TZ}"
    #     expose:
    #         - 80
    #     ports:
    #         - "${APP_PORT_FORWARD:-8000}:80"
    #     volumes:
    #         - ./:/var/www:ro
    #         - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    #         - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
    #         - ./docker/log/nginx:/var/log/nginx
    #     networks:
    #         - default
    #     depends_on:
    #         - app

    #MySQL Service
    # mysql:
    #     image: mysql
    #     container_name: "${MYSQL_CONTAINER_NAME}"
    #     command: --default-authentication-plugin=mysql_native_password
    #     restart: unless-stopped
    #     environment:
    #         TZ: "${APP_TZ}"
    #         MYSQL_USER: "${DB_USERNAME}"
    #         MYSQL_PASSWORD: "${DB_PASSWORD}"
    #         MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
    #     expose:
    #         - 3306
    #     ports:
    #         - "${DB_PORT_FORWARD:-3306}:3306"
    #     volumes:
    #         - ./docker/mysql/data:/var/lib/mysql
    #     networks:
    #         - default
    #     # healthcheck:
    #     #     test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
    #     #     retries: 3
    #     #     timeout: 5s

    #MongoDB Service
    mongodb:
        image: mongo
        container_name: "${MONGO_CONTAINER_NAME}"
        restart: unless-stopped
        environment:
            TZ: "${APP_TZ}"
            MONGO_INITDB_ROOT_USERNAME: "${DB_USERNAME}"
            MONGO_INITDB_ROOT_PASSWORD: "${DB_PASSWORD}"
        expose:
            - 27017
        ports:
            - "${DB_PORT_FORWARD:-27017}:27017"
        volumes:
            - ./docker/mongodb/data:/data/db
        networks:
            - default

    #Redis Service
    redis:
        image: redis:alpine
        container_name: "${REDIS_CONTAINER_NAME}"
        restart: unless-stopped
        environment:
            TZ: "${APP_TZ}"
        command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
        expose:
            - 6379
        ports:
            - "${REDIS_PORT_FORWARD:-6379}:6379"
        # volumes:
        #     - ./docker/log/redis:/var/log/redis
        networks:
            - default
        # healthcheck:
        #     test: ["CMD", "redis-cli", "ping"]
        #     retries: 3
        #     timeout: 5s

networks:
    default:
        driver: bridge
